{"name":"Handle invalid base","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"\r\nexpected: 201\r\nbut was : 202","trace":"org.opentest4j.AssertionFailedError: \r\nexpected: 201\r\nbut was : 202\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat fixer.cucumber.steps.timeseries.ReadTimeseriesSteps.theAPIShouldValidateAgainstInvalidBase(ReadTimeseriesSteps.java:81)\r\n\tat ✽.the API should validate against invalid base(file:///C:/Users/Therwold/IdeaProjects/fixer/src/test/resources/fixer/read_historial_rates.feature:58)\r\n"},"stage":"finished","steps":[{"name":"Given  I am authenticated to Fixer","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1719953109084,"stop":1719953109085},{"name":"When  I request historical exchange rates data for a non-existing base \"aaa\"","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1719953109085,"stop":1719953109534},{"name":"Then  the API should validate against invalid base","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"\r\nexpected: 201\r\nbut was : 202","trace":"org.opentest4j.AssertionFailedError: \r\nexpected: 201\r\nbut was : 202\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat fixer.cucumber.steps.timeseries.ReadTimeseriesSteps.theAPIShouldValidateAgainstInvalidBase(ReadTimeseriesSteps.java:81)\r\n\tat ✽.the API should validate against invalid base(file:///C:/Users/Therwold/IdeaProjects/fixer/src/test/resources/fixer/read_historial_rates.feature:58)\r\n"},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1719953109534,"stop":1719953109545}],"attachments":[],"parameters":[],"start":1719953109084,"stop":1719953109546,"uuid":"dd163c56-b9d1-4b28-8618-4dbb11c8e674","historyId":"328e8587f33373761c4618582f319f6b","fullName":"Fetching Historical Exchange Rates Data: Handle invalid base","labels":[{"name":"host","value":"DESKTOP-13B2LOF"},{"name":"thread","value":"29728@DESKTOP-13B2LOF.main(1)"},{"name":"feature","value":"Fetching Historical Exchange Rates Data"},{"name":"story","value":"Handle invalid base"},{"name":"suite","value":"Fetching Historical Exchange Rates Data"},{"name":"testClass","value":"Handle invalid base"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"file:///C:/Users/Therwold/IdeaProjects/fixer/src/test/resources/fixer/read_historial_rates.feature"},{"name":"package","value":"src.test.resources.fixer.read_historial_rates_feature.Fetching Historical Exchange Rates Data"}],"links":[]}